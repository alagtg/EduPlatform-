{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ProfLoginComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"Se connecter\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ProfLoginComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµelement(1, \"span\", 15);\n    i0.ÉµÉµtext(2, \" Connexion en cours... \");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction ProfLoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 16);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nexport class ProfLoginComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.loading = false;\n    this.error = '';\n  }\n  onLogin() {\n    this.loading = true;\n    this.error = '';\n    this.auth.login(this.email, this.password).subscribe({\n      next: res => {\n        this.auth.saveToken(res.token);\n        this.router.navigate(['/dashboard']);\n      },\n      error: () => {\n        this.error = 'Email ou mot de passe invalide';\n      },\n      complete: () => this.loading = false\n    });\n  }\n  static {\n    this.Éµfac = function ProfLoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProfLoginComponent)(i0.ÉµÉµdirectiveInject(i1.AuthService), i0.ÉµÉµdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: ProfLoginComponent,\n      selectors: [[\"app-prof-login\"]],\n      standalone: true,\n      features: [i0.ÉµÉµStandaloneFeature],\n      decls: 23,\n      vars: 6,\n      consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"login-header\"], [1, \"icon-wrapper\"], [1, \"login-icon\"], [1, \"login-title\"], [1, \"login-subtitle\"], [1, \"login-form\", 3, \"ngSubmit\"], [1, \"form-group\"], [1, \"form-label\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"professeur@example.com\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-primary\", \"w-100\", \"login-btn\", 3, \"disabled\"], [4, \"ngIf\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n      template: function ProfLoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n          i0.ÉµÉµtext(5, \"\\uD83C\\uDF93\");\n          i0.ÉµÉµelementEnd()();\n          i0.ÉµÉµelementStart(6, \"h2\", 5);\n          i0.ÉµÉµtext(7, \"Connexion Professeur\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(8, \"p\", 6);\n          i0.ÉµÉµtext(9, \"Acc\\u00E9dez \\u00E0 votre espace personnel\");\n          i0.ÉµÉµelementEnd()();\n          i0.ÉµÉµelementStart(10, \"form\", 7);\n          i0.ÉµÉµlistener(\"ngSubmit\", function ProfLoginComponent_Template_form_ngSubmit_10_listener() {\n            return ctx.onLogin();\n          });\n          i0.ÉµÉµelementStart(11, \"div\", 8)(12, \"label\", 9);\n          i0.ÉµÉµtext(13, \"Adresse email\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(14, \"input\", 10);\n          i0.ÉµÉµtwoWayListener(\"ngModelChange\", function ProfLoginComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ÉµÉµtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return $event;\n          });\n          i0.ÉµÉµelementEnd()();\n          i0.ÉµÉµelementStart(15, \"div\", 8)(16, \"label\", 9);\n          i0.ÉµÉµtext(17, \"Mot de passe\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(18, \"input\", 11);\n          i0.ÉµÉµtwoWayListener(\"ngModelChange\", function ProfLoginComponent_Template_input_ngModelChange_18_listener($event) {\n            i0.ÉµÉµtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ÉµÉµelementEnd()();\n          i0.ÉµÉµelementStart(19, \"button\", 12);\n          i0.ÉµÉµtemplate(20, ProfLoginComponent_span_20_Template, 2, 0, \"span\", 13)(21, ProfLoginComponent_span_21_Template, 3, 0, \"span\", 13);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµtemplate(22, ProfLoginComponent_div_22_Template, 2, 1, \"div\", 14);\n          i0.ÉµÉµelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµadvance(14);\n          i0.ÉµÉµtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ÉµÉµadvance(4);\n          i0.ÉµÉµtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ÉµÉµadvance();\n          i0.ÉµÉµproperty(\"disabled\", ctx.loading);\n          i0.ÉµÉµadvance();\n          i0.ÉµÉµproperty(\"ngIf\", !ctx.loading);\n          i0.ÉµÉµadvance();\n          i0.ÉµÉµproperty(\"ngIf\", ctx.loading);\n          i0.ÉµÉµadvance();\n          i0.ÉµÉµproperty(\"ngIf\", ctx.error);\n        }\n      },\n      dependencies: [CommonModule, i3.NgIf, FormsModule, i4.ÉµNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  margin-top: 3rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcHJvZi1sb2dpbi9wcm9mLWxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQVEsZ0JBQUE7QUFFUiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHsgbWFyZ2luLXRvcDogM3JlbTsgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµelement","ÉµÉµadvance","ÉµÉµtextInterpolate1","ctx_r0","error","ProfLoginComponent","constructor","auth","router","email","password","loading","onLogin","login","subscribe","next","res","saveToken","token","navigate","complete","ÉµÉµdirectiveInject","i1","AuthService","i2","Router","selectors","standalone","features","ÉµÉµStandaloneFeature","decls","vars","consts","template","ProfLoginComponent_Template","rf","ctx","ÉµÉµlistener","ProfLoginComponent_Template_form_ngSubmit_10_listener","ÉµÉµtwoWayListener","ProfLoginComponent_Template_input_ngModelChange_14_listener","$event","ÉµÉµtwoWayBindingSet","ProfLoginComponent_Template_input_ngModelChange_18_listener","ÉµÉµtemplate","ProfLoginComponent_span_20_Template","ProfLoginComponent_span_21_Template","ProfLoginComponent_div_22_Template","ÉµÉµtwoWayProperty","ÉµÉµproperty","i3","NgIf","i4","ÉµNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sources":["C:\\Users\\PC\\Desktop\\projetangular.nethoudaetraja\\EduPlatformFront\\src\\app\\pages\\prof-login\\prof-login.component.ts","C:\\Users\\PC\\Desktop\\projetangular.nethoudaetraja\\EduPlatformFront\\src\\app\\pages\\prof-login\\prof-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from '../../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-prof-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './prof-login.component.html',\n  styleUrls: ['./prof-login.component.scss']\n})\nexport class ProfLoginComponent {\n  email = '';\n  password = '';\n  loading = false;\n  error = '';\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  onLogin() {\n    this.loading = true;\n    this.error = '';\n    this.auth.login(this.email, this.password).subscribe({\n      next: (res: any) => {\n        this.auth.saveToken(res.token);\n        this.router.navigate(['/dashboard']);\n      },\n      error: () => { this.error = 'Email ou mot de passe invalide'; },\n      complete: () => this.loading = false\n    });\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"login-card\">\n    <div class=\"login-header\">\n      <div class=\"icon-wrapper\">\n        <span class=\"login-icon\">ðŸŽ“</span>\n      </div>\n      <h2 class=\"login-title\">Connexion Professeur</h2>\n      <p class=\"login-subtitle\">AccÃ©dez Ã  votre espace personnel</p>\n    </div>\n    \n    <form (ngSubmit)=\"onLogin()\" class=\"login-form\">\n      <div class=\"form-group\">\n        <label class=\"form-label\">Adresse email</label>\n        <input \n          type=\"email\" \n          class=\"form-control\" \n          [(ngModel)]=\"email\" \n          name=\"email\" \n          placeholder=\"professeur@example.com\"\n          required\n        >\n      </div>\n      \n      <div class=\"form-group\">\n        <label class=\"form-label\">Mot de passe</label>\n        <input \n          type=\"password\" \n          class=\"form-control\" \n          [(ngModel)]=\"password\" \n          name=\"password\" \n          placeholder=\"â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢\"\n          required\n        >\n      </div>\n      \n      <button class=\"btn btn-primary w-100 login-btn\" [disabled]=\"loading\">\n        <span *ngIf=\"!loading\">Se connecter</span>\n        <span *ngIf=\"loading\">\n          <span class=\"spinner-border spinner-border-sm me-2\"></span>\n          Connexion en cours...\n        </span>\n      </button>\n      \n      <div class=\"alert alert-danger mt-3\" *ngIf=\"error\">\n        {{ error }}\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}